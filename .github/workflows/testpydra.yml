# This workflow will install Python dependencies, run tests and lint with a variety of Python versions

name: Test Pydra

on: [push, pull_request]

env:
  install: pip

jobs:
  build:

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8]
        install: [min-req, install, develop, sdist, wheel]
      fail-fast: false
    runs-on: ${{ matrix.os }}


    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update build tools
      run: python -m pip install --upgrade pip setuptools


# https://www.edwardthomson.com/blog/github_actions_14_conditionals_with_a_matrix.html
    - name: Install dependencies (min-requirements.txt)
      if: matrix.install == 'min-req'
      run: pip install -r min-requirements.txt

    - name: Install dependencies (setup.py install)
      if: matrix.install == 'install'
      run: python setup.py install

    - name: Install dependencies (setup.py develop)
      if: matrix.install == 'develop'
      run: python setup.py develop

    - name: Install dependencies (sdist)
      if: matrix.install == 'sdist'
      run: |
        python setup.py sdist
        pip install dist/*.tar.gz

    - name: Install dependencies (wheel)
      if: matrix.install == 'wheel'
      run: |
        python setup.py bdist_wheel
        pip install dist/*.whl


    - name: Verify Python import
      run: python -c 'import pydra; print(pydra.__version__)'


    - name: Install Pydra (min-requirements.txt or setup.py install)
      if: matrix.install == 'min-req' || matrix.install == 'install'
      run: pip install ".[test]"

    - name: Install Pydra (setup.py develop)
      if: matrix.install == 'develop'
      run: pip install -e ".[test]"

    - name: Install Pydra (sdist)
      if: matrix.install == 'sdist'
      run: pip install "$( ls dist/pydra*.tar.gz )[test]"

    - name: Install Pydra (wheel)
      if: matrix.install == 'wheel'
      run: pip install "$( ls dist/pydra*.whl )[test]"



    - name: Pytest
      env:
        IGNORE_TESTS: '*dockertask.py'  # docker tests run in a seperate action for now
      run: |
        pytest --ignore-glob=$IGNORE_TESTS -vs -n auto --cov pydra  --cov-config .coveragerc --cov-report xml:cov.xml --doctest-modules pydra
    - name: Upload to codecov
      run: |
        codecov --root /pydra -f /pydra/cov.xml -F unittests
