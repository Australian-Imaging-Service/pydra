name: Test Pydra

on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: [3.7, 3.8]
        install: [min-req, install, develop, wheel]
      fail-fast: false
    runs-on: ${{ matrix.os }}


    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Update build tools
      run: python -m pip install --upgrade pip setuptools


    - name: Install dependencies (min-requirements.txt)
      if: matrix.install == 'min-req'
      run: pip install -r min-requirements.txt

    - name: Install dependencies (setup.py install)
      if: matrix.install == 'install'
      run: python setup.py install

    - name: Install dependencies (setup.py develop)
      if: matrix.install == 'develop'
      run: python setup.py develop

    - name: Install dependencies (wheel)
      if: matrix.install == 'wheel'
      run: |
        python setup.py bdist_wheel
        pip install dist/*.whl
      shell: bash


    - name: Install Pydra (min-requirements.txt or setup.py install)
      if: matrix.install == 'min-req' || matrix.install == 'install'
      run: pip install ".[test]"

    - name: Install Pydra (setup.py develop)
      if: matrix.install == 'develop'
      run: pip install -e ".[test]"

    - name: Install Pydra (wheel)
      if: matrix.install == 'wheel'
      run: pip install "$( ls dist/pydra*.whl )[test]"


    - name: Pytest
      run: pytest -vs -n auto --cov pydra  --cov-config .coveragerc --cov-report xml:cov.xml --doctest-modules pydra


    - name: Upload to codecov
      run: codecov --root /pydra -f /pydra/cov.xml -F unittests
